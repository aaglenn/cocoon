(declare-datatypes () ((NetMask (mk-NetMask (nm-mask (Array Int Bool)) (nm-len Int)))))

(declare-const bgpdb (Array Int (Array Int NetMask)))

;(define-fun match_mask ((ip (Array Int Bool)) (nm NetMask)) Bool
;   (forall ((i Int)) 
;           (=> (and (>= i 0) (< i (nm-len nm)))
;               (= (select ip i) (select (nm-mask nm) i)))
;   )
;)

(declare-fun match_mask ((Array Int Bool) NetMask Int) Bool)
(assert (forall ((ip (Array Int Bool)) (nm NetMask) (i Int))
                (= (match_mask ip nm i)
                   (ite (= i (nm-len nm))
                        true
                        (and (= (select ip i) (select (nm-mask nm) i)) (match_mask ip nm (+ i 1))) 
                   )
                )
        )
)

(declare-fun bgp_check_match ((Array Int (Array Int NetMask)) (Array Int Bool) Int) Bool)
(assert (forall ((db (Array Int (Array Int NetMask))) (ip (Array Int Bool)) (as Int))
                (= (bgp_check_match db ip as)
                   (and (< as 48) (>= as 0) (exists ((idx Int)) (match_mask ip (select (select db as) idx) 0)))
                )
        ) 
)

(declare-fun bgp_check_match2 ((Array Int Bool) Int) Bool)
(assert (forall ((ip (Array Int Bool)) (as Int))
                (= (bgp_check_match2 ip as)
                   (and (< as 48) (>= as 0) (exists ((idx Int)) (match_mask ip (select (select bgpdb as) idx) 0)))
                )
        ) 
)

(declare-fun bgp_match ((Array Int Bool)) (Array Int Bool))
(assert (forall ((ip (Array Int Bool)) (bit Int))
                (=> (and (< bit 48) (>= bit 0))
                    (= (select (bgp_match ip) bit)
                       (bgp_check_match2 ip bit)))
        )
)

;(declare-fun bgp_match (Int Int) (Array Int Bool))
;(assert (forall ((ip (Array Int Bool)) (idx Int))
;                (= (bgp_match ip idx)
;                   (ite (= idx 48) 
;                        ((as const (Array Int Bool)) false)
;                        (ite (bgp_check_match2 ip idx) 
;                             (store (bgp_match ip (+ idx 1)) idx true)
;                             (store (bgp_match ip (+ idx 1)) idx false))))
;        )
;)

(declare-const as Int)
(declare-const ip (Array Int Bool))

(assert (not (=> (and (< as 48) (>= as 0)) 
                 (= (bgp_check_match bgpdb ip as) 
                    (select (bgp_match ip) as))
             )
        )
)

(check-sat)
(get-model)
