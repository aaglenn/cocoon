changequote(`[[[', `]]]')

divert([[[-1]]])
define([[[forloop]]], [[[pushdef([[[$1]]], [[[$2]]])_forloop($@)popdef([[[$1]]])]]])
define([[[_forloop]]],
       [[[$4[[[]]]ifelse($1, [[[$3]]], [[[]]], [[[define([[[$1]]], incr($1))$0($@)]]])]]])
divert[[[]]]dnl

define([[[MAXAS]]], 10)
define([[[MASKBITS]]], 48)


function prefixMatch(ASId as, IP4 addr): bool = 
forloop([[[i]]], [[[0]]], decr(MAXAS), [[[(as == 48'd[[[]]]i and addr.ip3 == 8'd[[[]]]i) or ]]]) false

function inboundPolicy(ASId as, ip4_t p): ASPort = 16'd0

function outboundPolicies(ASId as, uint<10> i): ASId = 
    case {
        i == 10'd0: 48'd5;
        default: 48'd[[[]]]MAXAS;
    }

function outboundPolicy(ASId from, uint<10> i, ip4_t p): bool = i == 10'd0 and p.protocol == 8'd17

function nextHop(ASId as, IP4 addr): ASId = 
    case {
forloop([[[i]]], [[[0]]], decr(MAXAS), [[[        addr.ip3 == 8'd[[[]]]i: 48'd[[[]]]i;
]]])
        default: 48'd[[[]]]MAXAS;
    }
